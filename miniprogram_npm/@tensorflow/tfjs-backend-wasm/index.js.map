{"version":3,"sources":["index.js","kernels/all_kernels.js","kernels/_FusedMatMul.js","kernels/types.js","kernels/Abs.js","kernels/unary_kernel.js","kernels/Add.js","kernels/binary_kernel.js","kernels/AddN.js","kernels/ArgMax.js","kernels/AvgPool.js","kernels/BatchMatMul.js","kernels/Cast.js","kernels/ClipByValue.js","kernels/Concat.js","kernels/Conv2D.js","kernels/Cos.js","kernels/CropAndResize.js","kernels/DepthwiseConv2dNative.js","kernels/Div.js","kernels/Exp.js","kernels/FloorDiv.js","kernels/FusedBatchNorm.js","kernels/FusedConv2D.js","kernels/FusedDepthwiseConv2D.js","kernels/Gather.js","kernels/GatherNd.js","kernels/Greater.js","kernels/GreaterEqual.js","kernels/Less.js","kernels/LessEqual.js","kernels/Log.js","kernels/LogicalAnd.js","kernels/Max.js","kernels/Maximum.js","kernels/MaxPool.js","kernels/Min.js","kernels/Minimum.js","kernels/Mul.js","kernels/Neg.js","kernels/NonMaxSuppressionV3.js","kernels/NonMaxSuppression_util.js","kernels/NonMaxSuppressionV5.js","kernels/NotEqual.js","kernels/OnesLike.js","kernels/PadV2.js","kernels/Pow.js","kernels/Prelu.js","kernels/Relu.js","kernels/Relu6.js","kernels/Reshape.js","kernels/ResizeBilinear.js","kernels/Rsqrt.js","kernels/ScatterNd.js","kernels/Sigmoid.js","kernels/Sin.js","kernels/Slice.js","kernels/Softmax.js","kernels/Split.js","kernels/Sqrt.js","kernels/Square.js","kernels/Sub.js","kernels/Sum.js","kernels/Tanh.js","kernels/Tile.js","kernels/Transpose.js","kernels/Unpack.js","kernels/ZerosLike.js","backend_wasm.js","../wasm-out/tfjs-backend-wasm.js","version.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AENA,ADGA,AENA;AHUA,AIZA,AFMA,ADGA,AENA;AHUA,AIZA,AFMA,ADGA,AENA;AHUA,AIZA,AFMA,ADGA,AENA;AHUA,AIZA,AFMA,ADGA,AENA,AENA;ALgBA,AIZA,AFMA,ADGA,AENA,AENA;ALgBA,AIZA,AFMA,ADGA,AENA,AENA;ALgBA,AIZA,AENA,AJYA,ADGA,AENA,AENA;ALgBA,AIZA,AENA,AJYA,ADGA,AENA,AENA;ADIA,AENA,AJYA,ADGA,AENA,AENA;ADIA,AENA,AJYA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AJYA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AJYA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AENA,ANkBA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AENA,ANkBA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AENA,ANkBA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AENA,ACHA,APqBA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AENA,ACHA,APqBA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AENA,ACHA,APqBA,ADGA,AMlBA,AJYA,AENA;ADIA,AENA,AENA,ACHA,ACHA,ARwBA,ADGA,AMlBA,AJYA,AENA;ACFA,AENA,ACHA,ACHA,ARwBA,ADGA,AMlBA,AJYA,AENA;ACFA,AENA,ACHA,ACHA,ARwBA,ADGA,AMlBA,AJYA,AENA;ACFA,AENA,ACHA,ACHA,ACHA,AT2BA,ADGA,AMlBA,AJYA,AENA;ACFA,AENA,ACHA,ACHA,ACHA,AT2BA,ADGA,AMlBA,AJYA,AENA;ACFA,AENA,ACHA,ACHA,ACHA,AT2BA,ADGA,AMlBA,AJYA,AENA;ACFA,AENA,ACHA,ACHA,ACHA,ACHA,AV8BA,ADGA,AMlBA,AJYA,AENA;ACFA,AENA,ACHA,ACHA,ACHA,ACHA,AV8BA,ADGA,AMlBA,AJYA,AENA;AGRA,ACHA,ACHA,ACHA,ACHA,AV8BA,ADGA,AMlBA,AJYA,AENA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,AXiCA,ADGA,AMlBA,AJYA,AENA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,AXiCA,ADGA,AMlBA,AJYA,AENA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,AXiCA,ADGA,AMlBA,AJYA,AENA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AZoCA,ADGA,AMlBA,AJYA,AENA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AZoCA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AZoCA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AbuCA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AbuCA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AbuCA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,Af6CA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,Af6CA,ADGA,AMlBA,AFMA;AGRA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,Af6CA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AhBgDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AhBgDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AhBgDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AjBmDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AjBmDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AjBmDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AlBsDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AlBsDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AlBsDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AnByDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AnByDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AnByDA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ApB4DA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ApB4DA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ApB4DA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ArB+DA,ADGA,AMlBA;ACFA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ArB+DA,ADGA,AMlBA;AELA,ACHA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ArB+DA,ADGA,AMlBA;AELA,ACHA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AtBkEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AtBkEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AtBkEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AvBqEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AvBqEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AvBqEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AxBwEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,AxBwEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,AxBwEA,ADGA,AMlBA;AGRA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AzB2EA,ADGA,AMlBA;AGRA,ACHA,AGTA,ACHA,AENA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AzB2EA,ADGA,AMlBA;AGRA,ACHA,AGTA,ACHA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,AzB2EA,ADGA,AMlBA;AGRA,ACHA,AGTA,ACHA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,A3BiFA,AMlBA;AGRA,ACHA,AGTA,ACHA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ArB+DA;AGRA,ACHA,AGTA,ACHA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ArB+DA;AGRA,ACHA,AGTA,ACHA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AtBkEA;AGRA,ACHA,AGTA,ACHA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AtBkEA;AGRA,ACHA,AGTA,ACHA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AnB0DA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;ApB6DA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;ApB6DA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;ApB6DA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;ArBgEA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;ArBgEA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;ArBgEA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AtBmEA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AtBmEA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AtBmEA,AKfA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AlBuDA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AlBuDA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AlBuDA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AnB0DA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AnB0DA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA;AnB0DA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,AENA,ADGA;AnB0DA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,AENA,ADGA;AnB0DA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,ACHA,AENA,ADGA;AnB0DA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,ACHA,AENA,ADGA,AENA;ArBgEA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,ACHA,AENA,ADGA,AENA;ArBgEA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AKfA,ACHA,ACHA,AENA,ADGA,AENA;ArBgEA,AENA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,AKfA,ACHA,ACHA,AENA,ADGA,AENA,ACHA;AtBmEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AMlBA,ACHA,AENA,ADGA,AENA,ACHA;AtBmEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AMlBA,ACHA,AENA,ADGA,AENA,ACHA;AtBmEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AMlBA,ACHA,AENA,ADGA,AENA,ACHA,ACHA;AvBsEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AMlBA,ACHA,AENA,ADGA,AENA,ACHA,ACHA;AvBsEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ADGA,AENA,ACHA,ACHA;AvBsEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ADGA,AENA,ACHA,ACHA,ACHA;AxByEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ADGA,AENA,ACHA,ACHA,ACHA;AxByEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ADGA,AENA,ACHA,ACHA,ACHA;AxByEA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA;AzB4EA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA;AzB4EA,AENA,ACHA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AtBmEA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AvBsEA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AvBsEA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AvBsEA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ADGA;AvBsEA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ADGA;AvBsEA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ADGA;AvBsEA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ADGA,AENA;AzB4EA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ADGA,AENA;AzB4EA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,AENA,ACHA,ACHA,AENA,ADGA,AENA;AzB4EA,AKfA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,AENA,ACHA,ACHA,AENA,ADGA,AENA,ACHA;ArBgEA,ACHA,ACHA,ACHA,AOrBA,AENA,ACHA,AENA,ACHA,ACHA,AENA,ADGA,AENA,ACHA;ArBgEA,ACHA,AENA,AOrBA,AENA,ACHA,AGTA,ACHA,AENA,ADGA,AENA,ACHA;ArBgEA,ACHA,AS3BA,AENA,ACHA,AGTA,ACHA,AENA,ADGA,AENA,ACHA,ACHA;AtBmEA,ACHA,AS3BA,AENA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA;AtBmEA,ACHA,AS3BA,AENA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA;AtBmEA,ACHA,AS3BA,AENA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA;AvBsEA,ACHA,AS3BA,AENA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA;AvBsEA,ACHA,AS3BA,AENA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA;AvBsEA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA;AxByEA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA;AxByEA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA;AxByEA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AzB4EA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AzB4EA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AzB4EA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A1B+EA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A1B+EA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA;A1B+EA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A3BkFA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A3BkFA,ACHA,AWjCA,ACHA,AIZA,AENA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A3BkFA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A5BqFA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A5BqFA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A5BqFA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A7BwFA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A7BwFA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;A7BwFA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A9B2FA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A9B2FA,ACHA,AWjCA,AKfA,AENA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A9B2FA,ACHA,AWjCA,AKfA,AENA,AGTA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;A/B8FA,ACHA,AWjCA,AKfA,AENA,AGTA,AENA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;A/B8FA,ACHA,AWjCA,AKfA,AENA,AGTA,AENA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;A/B8FA,ACHA,AWjCA,AKfA,AENA,AGTA,AENA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AhCiGA,ACHA,AWjCA,AKfA,AENA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA;AhCiGA,ACHA,AWjCA,AKfA,AENA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA;AhCiGA,ACHA,AWjCA,AKfA,AENA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AjCoGA,ACHA,AWjCA,AOrBA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AjCoGA,ACHA,AWjCA,AOrBA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AjCoGA,ACHA,AWjCA,AOrBA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AlCuGA,ACHA,AWjCA,AOrBA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AjCoGA,AWjCA,AOrBA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AjCoGA,AWjCA,AOrBA,AGTA,AENA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AlCuGA,AWjCA,AU9BA,AENA,AGTA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AlCuGA,AWjCA,AU9BA,AENA,AGTA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AbwCA,AENA,AIZA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;Ad2CA,AENA,AIZA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;Ad2CA,AENA,AIZA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;Ad2CA,AENA,AIZA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;Af8CA,AENA,AIZA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;Af8CA,AENA,AIZA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;Af8CA,AMlBA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AV+BA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AV+BA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;AV+BA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AXkCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AXkCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AXkCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AZqCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AZqCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AZqCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AbwCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AbwCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AbwCA,AENA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;Ad2CA,AENA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;Ad2CA,AENA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA;Ad2CA,AENA,ACHA,AENA,ACHA,ACHA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;Af8CA,AENA,ACHA,AENA,ACHA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA;Af8CA,AENA,ACHA,AENA,ACHA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA;Af8CA,AENA,ACHA,AENA,ACHA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AhBiDA,AENA,ACHA,AENA,ACHA,ACHA,AGTA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA;AhBiDA,AENA,AGTA,ACHA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA;ACFA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA;ACFA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA;ACFA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,ACHA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA,AGTA;ADIA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA,AGTA;ADIA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA,AGTA;ADIA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA,AGTA;ADIA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA,AGTA;ADIA,ADGA,AjBmDA,AENA,AGTA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,ACHA,ACHA,AIZA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,ACHA,AKfA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;AELA,ADGA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;ACFA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;ACFA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;ACFA,AZoCA,AMlBA,AENA,ACHA,ACHA,ACHA;ACFA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA,ACHA;AELA,AZoCA,AQxBA,ACHA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AZoCA,AS3BA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./kernels/all_kernels');\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var __TEMP__ = require('./backend_wasm');Object.defineProperty(exports, 'BackendWasm', { enumerable: true, configurable: true, get: function() { return __TEMP__.BackendWasm; } });Object.defineProperty(exports, 'setWasmPath', { enumerable: true, configurable: true, get: function() { return __TEMP__.setWasmPath; } });\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var __TEMP__ = require('./version');Object.defineProperty(exports, 'version_wasm', { enumerable: true, configurable: true, get: function() { return __TEMP__.version; } });\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nvar __TEMP__ = require('./_FusedMatMul');\nvar __TEMP__ = require('./Abs');\nvar __TEMP__ = require('./Add');\nvar __TEMP__ = require('./AddN');\nvar __TEMP__ = require('./ArgMax');\nvar __TEMP__ = require('./AvgPool');\nvar __TEMP__ = require('./BatchMatMul');\nvar __TEMP__ = require('./Cast');\nvar __TEMP__ = require('./ClipByValue');\nvar __TEMP__ = require('./Concat');\nvar __TEMP__ = require('./Conv2D');\nvar __TEMP__ = require('./Cos');\nvar __TEMP__ = require('./CropAndResize');\nvar __TEMP__ = require('./DepthwiseConv2dNative');\nvar __TEMP__ = require('./Div');\nvar __TEMP__ = require('./Exp');\nvar __TEMP__ = require('./FloorDiv');\nvar __TEMP__ = require('./FusedBatchNorm');\nvar __TEMP__ = require('./FusedConv2D');\nvar __TEMP__ = require('./FusedDepthwiseConv2D');\nvar __TEMP__ = require('./Gather');\nvar __TEMP__ = require('./GatherNd');\nvar __TEMP__ = require('./Greater');\nvar __TEMP__ = require('./GreaterEqual');\nvar __TEMP__ = require('./Less');\nvar __TEMP__ = require('./LessEqual');\nvar __TEMP__ = require('./Log');\nvar __TEMP__ = require('./LogicalAnd');\nvar __TEMP__ = require('./Max');\nvar __TEMP__ = require('./Maximum');\nvar __TEMP__ = require('./MaxPool');\nvar __TEMP__ = require('./Min');\nvar __TEMP__ = require('./Minimum');\nvar __TEMP__ = require('./Mul');\nvar __TEMP__ = require('./Neg');\nvar __TEMP__ = require('./NonMaxSuppressionV3');\nvar __TEMP__ = require('./NonMaxSuppressionV5');\nvar __TEMP__ = require('./NotEqual');\nvar __TEMP__ = require('./OnesLike');\nvar __TEMP__ = require('./PadV2');\nvar __TEMP__ = require('./Pow');\nvar __TEMP__ = require('./Prelu');\nvar __TEMP__ = require('./Relu');\nvar __TEMP__ = require('./Relu6');\nvar __TEMP__ = require('./Reshape');\nvar __TEMP__ = require('./ResizeBilinear');\nvar __TEMP__ = require('./Rsqrt');\nvar __TEMP__ = require('./ScatterNd');\nvar __TEMP__ = require('./Sigmoid');\nvar __TEMP__ = require('./Sin');\nvar __TEMP__ = require('./Slice');\nvar __TEMP__ = require('./Softmax');\nvar __TEMP__ = require('./Split');\nvar __TEMP__ = require('./Sqrt');\nvar __TEMP__ = require('./Square');\nvar __TEMP__ = require('./Sub');\nvar __TEMP__ = require('./Sum');\nvar __TEMP__ = require('./Tanh');\nvar __TEMP__ = require('./Tile');\nvar __TEMP__ = require('./Transpose');\nvar __TEMP__ = require('./Unpack');\nvar __TEMP__ = require('./ZerosLike');\n//# sourceMappingURL=all_kernels.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./types');var FusableActivation = __TEMP__['FusableActivation'];\nlet wasmFusedMatMul;\nfunction setup(backend) {\n    wasmFusedMatMul = backend.wasm.cwrap('_FusedMatMul', null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction fusedBatchMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b, bias, preluActivationWeights } = inputs;\n    if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n        throw new Error(`_FusedMatMul for non non-float32 tensors not yet supported.`);\n    }\n    const { transposeA, transposeB, activation } = attrs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n    let biasId = 0;\n    if (bias != null) {\n        const biasData = backend.dataIdMap.get(bias.dataId);\n        if (biasData.shape.length !== 1) {\n            throw new Error(`_FusedMatMul only supports rank-1 bias but got ` +\n                `rank ${biasData.shape.length}.`);\n        }\n        biasId = biasData.id;\n    }\n    const preluActivationWeightsId = preluActivationWeights == null ?\n        0 :\n        backend.dataIdMap.get(preluActivationWeights.dataId).id;\n    const fusedActivation = FusableActivation[activation];\n    if (fusedActivation == null) {\n        throw new Error(`${activation} activation not yet supported for FusedConv2D ` +\n            `in the wasm backend.`);\n    }\n    const leftDim = transposeA ? a.shape[2] : a.shape[1];\n    const rightDim = transposeB ? b.shape[1] : b.shape[2];\n    const batchDim = a.shape[0];\n    const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    wasmFusedMatMul(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: '_FusedMatMul',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedBatchMatMul\n});\n//# sourceMappingURL=_FusedMatMul.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// This enum must align with the enum defined in cc/backend.h.\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var CppDType = exports.CppDType = undefined;\n(function (CppDType) {\n    CppDType[CppDType[\"float32\"] = 0] = \"float32\";\n    CppDType[CppDType[\"int32\"] = 1] = \"int32\";\n    CppDType[CppDType[\"bool\"] = 2] = \"bool\";\n    CppDType[CppDType[\"string\"] = 3] = \"string\";\n    CppDType[CppDType[\"complex64\"] = 4] = \"complex64\";\n})(CppDType || (CppDType = {}));\n// Must match enum in cc/fusable_activations.h.\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });var FusableActivation = exports.FusableActivation = undefined;\n(function (FusableActivation) {\n    FusableActivation[FusableActivation[\"linear\"] = 0] = \"linear\";\n    FusableActivation[FusableActivation[\"relu\"] = 1] = \"relu\";\n    FusableActivation[FusableActivation[\"relu6\"] = 2] = \"relu6\";\n    FusableActivation[FusableActivation[\"prelu\"] = 3] = \"prelu\";\n})(FusableActivation || (FusableActivation = {}));\n//# sourceMappingURL=types.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Abs');\n//# sourceMappingURL=Abs.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.registerUnaryKernel = function registerUnaryKernel(kernelName) {\n    let wasmFunc;\n    function setupFunc(backend) {\n        wasmFunc =\n            backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\n    }\n    function kernelFunc(args) {\n        const { backend, inputs: { x } } = args;\n        const xId = backend.dataIdMap.get(x.dataId).id;\n        const out = backend.makeOutput(x.shape, x.dtype);\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        // Short-circuit zero-sized tensors.\n        if (util.sizeFromShape(out.shape) === 0) {\n            return out;\n        }\n        wasmFunc(xId, outId);\n        return out;\n    }\n    registerKernel({ kernelName, backendName: 'wasm', setupFunc, kernelFunc });\n};\n//# sourceMappingURL=unary_kernel.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Add', supportsFullBroadcast);\n//# sourceMappingURL=Add.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var backend_util = __TEMP__['backend_util'];var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.registerBinaryKernel = function registerBinaryKernel(kernelName, supportsFullBroadcast, dtype) {\n    let wasmFunc;\n    function setupFunc(backend) {\n        wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n            'number',\n            'array',\n            'number',\n            'number',\n            'array',\n            'number',\n            'number',\n            'number' // out_id\n        ]);\n    }\n    function kernelFunc(args) {\n        const { backend, inputs } = args;\n        const { a, b } = inputs;\n        const aId = backend.dataIdMap.get(a.dataId).id;\n        const bId = backend.dataIdMap.get(b.dataId).id;\n        const outputType = dtype != null ? dtype : a.dtype;\n        const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        const out = backend.makeOutput(newShape, outputType);\n        // Short-circuit zero-sized tensors.\n        if (util.sizeFromShape(newShape) === 0) {\n            return out;\n        }\n        const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n        const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n        const outId = backend.dataIdMap.get(out.dataId).id;\n        const kernelFunc = () => wasmFunc(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, CppDType[a.dtype], outId);\n        if (supportsFullBroadcast) {\n            kernelFunc();\n            return out;\n        }\n        const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n        const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n        const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n        const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n        if (loopsOverAllOfA && loopsOverAllOfB) {\n            kernelFunc();\n            return out;\n        }\n        else {\n            throw new Error(`Broadcasting along outer dims is not yet ` +\n                `supported for ${kernelName}.`);\n        }\n    }\n    registerKernel({ kernelName, backendName: 'wasm', setupFunc, kernelFunc });\n};\n//# sourceMappingURL=binary_kernel.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nlet wasmFunc;\nfunction setupFunc(backend) {\n    wasmFunc = backend.wasm.cwrap('AddN', null /* void */, [\n        'array',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction addn(args) {\n    const { inputs, backend } = args;\n    const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n        return out;\n    }\n    const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n    const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'AddN',\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc: addn,\n});\n//# sourceMappingURL=AddN.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap('ArgMax', null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction argmax(args) {\n    const { inputs: { x }, backend, attrs: { axis } } = args;\n    const outShape = x.shape.slice(0, -1);\n    const out = backend.makeOutput(outShape, 'int32');\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const outerSize = util.sizeFromShape(out.shape);\n    const innerSize = x.shape[axis];\n    wasmFunc(xId, CppDType[x.dtype], outerSize, innerSize, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'ArgMax',\n    backendName: 'wasm',\n    kernelFunc: argmax,\n    setupFunc: setup\n});\n//# sourceMappingURL=ArgMax.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nlet wasmAvgPool;\nfunction setup(backend) {\n    wasmAvgPool = backend.wasm.cwrap('AvgPool', null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction avgPool(args) {\n    const { inputs, attrs, backend } = args;\n    const convInfo = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const channels = convInfo.inChannels;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n        throw new Error(`was backend only supports average pooling with dilation = [1, 1], ` +\n            `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAvgPool(xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'AvgPool',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: avgPool\n});\n//# sourceMappingURL=AvgPool.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nlet wasmBatchMatMul;\nfunction setup(backend) {\n    wasmBatchMatMul = backend.wasm.cwrap('BatchMatMul', null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction batchMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b } = inputs;\n    if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n        throw new Error(`BatchMatMul for non non-float32 tensors not yet supported.`);\n    }\n    const { transposeA, transposeB } = attrs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n    const leftDim = transposeA ? a.shape[2] : a.shape[1];\n    const rightDim = transposeB ? b.shape[1] : b.shape[2];\n    const batchDim = a.shape[0];\n    const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    wasmBatchMatMul(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, transposeA, transposeB, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'BatchMatMul',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: batchMatMul\n});\n//# sourceMappingURL=BatchMatMul.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.cast = function cast(args) {\n    const { inputs: { x }, attrs: { dtype }, backend } = args;\n    const out = backend.makeOutput(x.shape, dtype);\n    const inVals = backend.typedArrayFromHeap(x);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.set(inVals);\n    return out;\n};\nregisterKernel({\n    kernelName: 'Cast',\n    backendName: 'wasm',\n    kernelFunc: cast,\n});\n//# sourceMappingURL=Cast.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nlet wasmClip;\nfunction setup(backend) {\n    wasmClip = backend.wasm.cwrap('ClipByValue', null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction clip(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { min, max } = attrs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmClip(xId, min, max, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'ClipByValue',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: clip\n});\n//# sourceMappingURL=ClipByValue.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var backend_util = __TEMP__['backend_util'];var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nfunction concat(args) {\n    const { inputs, backend, attrs: { axis } } = args;\n    const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n    const out = backend.makeOutput(outShape, inputs[0].dtype);\n    const batchDim = util.sizeFromShape(inputs[0].shape.slice(0, axis));\n    let sumInnerDims = 0;\n    const innerDims = inputs.map(input => {\n        const innerDim = util.sizeFromShape(input.shape.slice(axis));\n        sumInnerDims += innerDim;\n        return innerDim;\n    });\n    const inVals = inputs.map(input => backend.typedArrayFromHeap(input));\n    const outVals = backend.typedArrayFromHeap(out);\n    for (let b = 0; b < batchDim; b++) {\n        let outOffset = b * sumInnerDims;\n        for (let i = 0; i < inVals.length; i++) {\n            const innerDim = innerDims[i];\n            const inOffset = b * innerDim;\n            const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n            outVals.set(vals, outOffset);\n            outOffset += innerDim;\n        }\n    }\n    return out;\n}\nregisterKernel({\n    kernelName: 'Concat',\n    backendName: 'wasm',\n    kernelFunc: concat,\n});\n//# sourceMappingURL=Concat.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var backend_util = __TEMP__['backend_util'];var registerKernel = __TEMP__['registerKernel'];\nlet wasmConv2d;\nfunction setup(backend) {\n    wasmConv2d = backend.wasm.cwrap('Conv2D', null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction conv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { x, filter } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const { strides, dilations, pad, dimRoundingMode, dataFormat } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false, $dataFormat);\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const outputChannels = convInfo.outChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend Conv2D does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmConv2d(xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'Conv2D',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: conv2d\n});\n//# sourceMappingURL=Conv2D.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Cos');\n//# sourceMappingURL=Cos.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./Cast');var cast = __TEMP__['cast'];\n// Must match enum in CropAndResize.cc\nvar InterpolationMethod;\n(function (InterpolationMethod) {\n    InterpolationMethod[InterpolationMethod[\"bilinear\"] = 0] = \"bilinear\";\n    InterpolationMethod[InterpolationMethod[\"nearest\"] = 1] = \"nearest\";\n})(InterpolationMethod || (InterpolationMethod = {}));\nlet wasmCropAndResize;\nfunction setup(backend) {\n    wasmCropAndResize = backend.wasm.cwrap('CropAndResize', null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // out id\n    ]);\n}\nfunction cropAndResize(args) {\n    const { backend, inputs, attrs } = args;\n    const { method, extrapolationValue, cropSize } = attrs;\n    const { images, boxes, boxInd } = inputs;\n    const numBoxes = boxes.shape[0];\n    const [cropHeight, cropWidth] = cropSize;\n    const outShape = [numBoxes, cropHeight, cropWidth, images.shape[3]];\n    let imagesData = backend.dataIdMap.get(images.dataId);\n    let castedData;\n    if (images.dtype !== 'float32') {\n        castedData =\n            cast({ backend, inputs: { x: images }, attrs: { dtype: 'float32' } });\n        imagesData = backend.dataIdMap.get(castedData.dataId);\n    }\n    const imagesId = imagesData.id;\n    const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n    const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n    const out = backend.makeOutput(outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const imagesShapeBytes = new Uint8Array(new Int32Array(images.shape).buffer);\n    wasmCropAndResize(imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight, cropWidth, InterpolationMethod[method], extrapolationValue, outId);\n    if (castedData != null) {\n        backend.disposeData(castedData.dataId);\n    }\n    return out;\n}\nregisterKernel({\n    kernelName: 'CropAndResize',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: cropAndResize\n});\n//# sourceMappingURL=CropAndResize.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var backend_util = __TEMP__['backend_util'];var registerKernel = __TEMP__['registerKernel'];\nlet wasmDepthwiseConv2d;\nfunction setup(backend) {\n    wasmDepthwiseConv2d =\n        backend.wasm.cwrap('DepthwiseConv2dNative', null /* void */, [\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n        ]);\n}\nfunction depthwiseConv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { x, filter } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const { strides, dilations, pad, dimRoundingMode } = attrs;\n    const $dilations = dilations == null ? [1, 1] : dilations;\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const outputChannels = convInfo.outChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmDepthwiseConv2d(xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'DepthwiseConv2dNative',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: depthwiseConv2d\n});\n//# sourceMappingURL=DepthwiseConv2dNative.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Div', supportsFullBroadcast);\n//# sourceMappingURL=Div.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Exp');\n//# sourceMappingURL=Exp.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('FloorDiv', supportsFullBroadcast);\n//# sourceMappingURL=FloorDiv.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nlet wasmBatchNorm;\nfunction setup(backend) {\n    wasmBatchNorm = backend.wasm.cwrap('FusedBatchNorm', null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\nfunction fusedBatchNorm(args) {\n    const { backend, inputs, attrs } = args;\n    const { varianceEpsilon } = attrs;\n    const { x, mean, variance, offset, scale } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const meanId = backend.dataIdMap.get(mean.dataId).id;\n    const varianceId = backend.dataIdMap.get(variance.dataId).id;\n    const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n    const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(x.shape) === 0) {\n        return out;\n    }\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmBatchNorm(xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'FusedBatchNorm',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedBatchNorm\n});\n//# sourceMappingURL=FusedBatchNorm.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./types');var FusableActivation = __TEMP__['FusableActivation'];\nlet wasmFusedConv2d;\nfunction setup(backend) {\n    wasmFusedConv2d = backend.wasm.cwrap('FusedConv2D', null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction fusedConv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { convInfo, activation } = attrs;\n    const fusedActivation = FusableActivation[activation];\n    if (fusedActivation == null) {\n        throw new Error(`${activation} activation not yet supported for FusedConv2D ` +\n            `in the wasm backend.`);\n    }\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const outputChannels = convInfo.outChannels;\n    let biasId = 0;\n    if (bias != null) {\n        const biasData = backend.dataIdMap.get(bias.dataId);\n        if (biasData.shape.length !== 1) {\n            throw new Error(`FusedConv2D only supports rank-1 bias but got ` +\n                `rank ${biasData.shape.length}.`);\n        }\n        if (biasData.shape[0] !== outputChannels) {\n            throw new Error(`FusedConv2D bias shape (${biasData.shape}) does not ` +\n                `match the number of output channels (${outputChannels})`);\n        }\n        biasId = biasData.id;\n    }\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    const batchSize = convInfo.batchSize;\n    const inHeight = convInfo.inHeight;\n    const inWidth = convInfo.inWidth;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend FusedConv2D does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const preluActivationWeightsId = preluActivationWeights == null ?\n        0 :\n        backend.dataIdMap.get(preluActivationWeights.dataId).id;\n    wasmFusedConv2d(xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth, biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, fusedActivation, preluActivationWeightsId, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'FusedConv2D',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedConv2d\n});\n//# sourceMappingURL=FusedConv2D.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./types');var FusableActivation = __TEMP__['FusableActivation'];\nlet wasmFusedDepthwiseConv2d;\nfunction setup(backend) {\n    wasmFusedDepthwiseConv2d =\n        backend.wasm.cwrap('FusedDepthwiseConv2D', null /* void */, [\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n            'number',\n        ]);\n}\nfunction fusedDepthwiseConv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { convInfo, activation } = attrs;\n    const fusedActivation = FusableActivation[activation];\n    if (fusedActivation == null) {\n        throw new Error(`${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n            `in the wasm backend.`);\n    }\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterId = backend.dataIdMap.get(filter.dataId).id;\n    const outputChannels = convInfo.outChannels;\n    let biasId = 0;\n    if (bias != null) {\n        const biasData = backend.dataIdMap.get(bias.dataId);\n        if (biasData.shape.length !== 1) {\n            throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n                `rank ${biasData.shape.length}.`);\n        }\n        if (biasData.shape[0] !== outputChannels) {\n            throw new Error(`FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n                `match the number of output channels (${outputChannels})`);\n        }\n        biasId = biasData.id;\n    }\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n    const batchSize = convInfo.batchSize;\n    const inHeight = convInfo.inHeight;\n    const inWidth = convInfo.inWidth;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const preluActivationWeightsId = preluActivationWeights == null ?\n        0 :\n        backend.dataIdMap.get(preluActivationWeights.dataId).id;\n    wasmFusedDepthwiseConv2d(xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth, biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, fusedActivation, preluActivationWeightsId, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'FusedDepthwiseConv2D',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: fusedDepthwiseConv2d\n});\n//# sourceMappingURL=FusedDepthwiseConv2D.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nlet wasmGather;\nfunction setup(backend) {\n    wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number' // outId\n    ]);\n}\nfunction gather(args) {\n    const { backend, inputs, attrs } = args;\n    const { x, indices } = inputs;\n    const { axis } = attrs;\n    const newShape = x.shape.slice();\n    newShape[axis] = util.sizeFromShape(indices.shape);\n    const stridesSize = x.shape.length - 1;\n    const out = backend.makeOutput(newShape, x.dtype);\n    if (util.sizeFromShape(x.shape) === 0) {\n        return out;\n    }\n    const xData = backend.dataIdMap.get(x.dataId);\n    const xId = xData.id;\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(newShape)).buffer);\n    wasmGather(xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId, axis, outStridesBytes, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'Gather',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: gather\n});\n//# sourceMappingURL=Gather.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var gather_util = __TEMP__['gather_util'];var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nlet wasmGatherNd;\nfunction setup(backend) {\n    wasmGatherNd = backend.wasm.cwrap('GatherNd', null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number' // outId\n    ]);\n}\nfunction gatherNd(args) {\n    const { backend, inputs } = args;\n    const { x, indices } = inputs;\n    const [resultShape, numSlices, sliceSize, strides] = gather_util.prepareAndValidate(x, indices);\n    const out = backend.makeOutput(resultShape, x.dtype);\n    if (numSlices === 0) {\n        return out;\n    }\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    const xData = backend.dataIdMap.get(x.dataId);\n    const xId = xData.id;\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmGatherNd(xId, CppDType[x.dtype], indicesId, numSlices, sliceRank, sliceSize, stridesBytes, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'GatherNd',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: gatherNd\n});\n//# sourceMappingURL=GatherNd.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Greater', supportsFullBroadcast, 'bool');\n//# sourceMappingURL=Greater.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('GreaterEqual', supportsFullBroadcast, 'bool');\n//# sourceMappingURL=GreaterEqual.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Less', supportsFullBroadcast, 'bool');\n//# sourceMappingURL=Less.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('LessEqual', supportsFullBroadcast, 'bool');\n//# sourceMappingURL=LessEqual.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Log');\n//# sourceMappingURL=Log.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('LogicalAnd', supportsFullBroadcast, 'bool');\n//# sourceMappingURL=LogicalAnd.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var backend_util = __TEMP__['backend_util'];var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nvar __TEMP__ = require('@tensorflow/tfjs-core');var Max = __TEMP__['Max'];\nlet wasmMax;\nfunction setup(backend) {\n    wasmMax =\n        backend.wasm.cwrap('Max', null /*void*/, ['number, number, number']);\n}\nfunction max(args) {\n    const { backend, inputs, attrs } = args;\n    const { reductionIndices } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const origAxes = util.parseAxisParam(reductionIndices, x.shape);\n    backend_util.assertAxesAreInnerMostDims('max', origAxes, x.shape.length);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(x.shape, origAxes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, x.dtype);\n    if (util.sizeFromShape(x.shape) === 0) {\n        return out;\n    }\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(xId, reduceSize, outId);\n    return out;\n}\nregisterKernel({ kernelName: Max, backendName: 'wasm', setupFunc: setup, kernelFunc: max });\n//# sourceMappingURL=Max.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Maximum', supportsFullBroadcast);\n//# sourceMappingURL=Maximum.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nlet wasmMaxPool;\nfunction setup(backend) {\n    wasmMaxPool = backend.wasm.cwrap('MaxPool', null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction maxPool(args) {\n    const { inputs, attrs, backend } = args;\n    const convInfo = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padRight = convInfo.padInfo.right;\n    const padBottom = convInfo.padInfo.bottom;\n    const padLeft = convInfo.padInfo.left;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const inputChannels = convInfo.inChannels;\n    const outputChannels = convInfo.outChannels;\n    if (convInfo.dataFormat !== 'channelsLast') {\n        throw new Error(`wasm backend does not support dataFormat:'` +\n            `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n    }\n    const out = backend.makeOutput(convInfo.outShape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMaxPool(xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'MaxPool',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: maxPool\n});\n//# sourceMappingURL=MaxPool.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var backend_util = __TEMP__['backend_util'];var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nlet wasmMin;\nfunction setup(backend) {\n    wasmMin =\n        backend.wasm.cwrap('Min', null /*void*/, ['number, number, number']);\n}\nfunction min(args) {\n    const { backend, inputs, attrs } = args;\n    const { axes } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    backend_util.assertAxesAreInnerMostDims('min', axes, x.shape.length);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(x.shape, axes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, x.dtype);\n    if (util.sizeFromShape(x.shape) === 0) {\n        return out;\n    }\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(xId, reduceSize, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'Min',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: min\n});\n//# sourceMappingURL=Min.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Minimum', supportsFullBroadcast);\n//# sourceMappingURL=Minimum.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Mul', supportsFullBroadcast);\n//# sourceMappingURL=Mul.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Neg');\n//# sourceMappingURL=Neg.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./NonMaxSuppression_util');var parseResultStruct = __TEMP__['parseResultStruct'];\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap('NonMaxSuppressionV3', 'number', // Result*\n    [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction kernelFunc(args) {\n    const { backend, inputs, attrs } = args;\n    const { iouThreshold, maxOutputSize, scoreThreshold } = attrs;\n    const { boxes, scores } = inputs;\n    const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n    const scoresId = backend.dataIdMap.get(scores.dataId).id;\n    const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n    const { pSelectedIndices, selectedSize, pSelectedScores } = parseResultStruct(backend, resOffset);\n    // Since we are not using scores for V3, we have to delete it from the heap.\n    backend.wasm._free(pSelectedScores);\n    const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n    return selectedIndicesTensor;\n}\nregisterKernel({\n    kernelName: 'NonMaxSuppressionV3',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc,\n});\n//# sourceMappingURL=NonMaxSuppressionV3.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.parseResultStruct = function parseResultStruct(backend, resOffset) {\n    const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 3);\n    const pSelectedIndices = result[0];\n    const selectedSize = result[1];\n    const pSelectedScores = result[2];\n    // Since the result was allocated on the heap, we have to delete it.\n    backend.wasm._free(resOffset);\n    return { pSelectedIndices, selectedSize, pSelectedScores };\n};\n//# sourceMappingURL=NonMaxSuppression_util.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./NonMaxSuppression_util');var parseResultStruct = __TEMP__['parseResultStruct'];\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap('NonMaxSuppressionV5', 'number', // Result*\n    [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nfunction kernelFunc(args) {\n    const { backend, inputs, attrs } = args;\n    const { iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma } = attrs;\n    const { boxes, scores } = inputs;\n    const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n    const scoresId = backend.dataIdMap.get(scores.dataId).id;\n    const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    const { pSelectedIndices, selectedSize, pSelectedScores, } = parseResultStruct(backend, resOffset);\n    const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n    const selectedScoresTensor = backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n    return [selectedIndicesTensor, selectedScoresTensor];\n}\nregisterKernel({\n    kernelName: 'NonMaxSuppressionV5',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc,\n});\n//# sourceMappingURL=NonMaxSuppressionV5.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('NotEqual', supportsFullBroadcast, 'bool');\n//# sourceMappingURL=NotEqual.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nfunction onesLike(args) {\n    const { inputs: { x }, backend } = args;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.fill(1);\n    return out;\n}\nregisterKernel({\n    kernelName: 'OnesLike',\n    backendName: 'wasm',\n    kernelFunc: onesLike,\n});\n//# sourceMappingURL=OnesLike.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nlet wasmPadV2;\nfunction setup(backend) {\n    wasmPadV2 = backend.wasm.cwrap('PadV2', null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number',\n    ]);\n}\nfunction pad(args) {\n    const { inputs: { x }, backend, attrs: { paddings, constantValue } } = args;\n    const outShape = paddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(outShape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    const paddingsFlat = [].concat(...paddings);\n    const paddingsBytes = new Uint8Array(new Int32Array(paddingsFlat).buffer);\n    wasmPadV2(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], paddingsBytes, constantValue, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'PadV2',\n    backendName: 'wasm',\n    kernelFunc: pad,\n    setupFunc: setup\n});\n//# sourceMappingURL=PadV2.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Pow', supportsFullBroadcast);\n//# sourceMappingURL=Pow.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nlet wasmPrelu;\nfunction setup(backend) {\n    wasmPrelu = backend.wasm.cwrap('Prelu', null /* void */, [\n        'number',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction prelu(args) {\n    const { inputs, backend } = args;\n    const { x, alpha } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n    const out = backend.makeOutput(x.shape, 'float32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmPrelu(xId, weightsId, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'Prelu',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: prelu\n});\n//# sourceMappingURL=Prelu.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Relu');\n//# sourceMappingURL=Relu.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Relu6');\n//# sourceMappingURL=Relu6.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.reshape = function reshape(args) {\n    const { inputs: { x }, attrs: { shape } } = args;\n    return { dataId: x.dataId, shape, dtype: x.dtype };\n};\nregisterKernel({\n    kernelName: 'Reshape',\n    backendName: 'wasm',\n    kernelFunc: reshape,\n});\n//# sourceMappingURL=Reshape.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nvar __TEMP__ = require('./Cast');var cast = __TEMP__['cast'];\nlet wasmResizeBilinear;\nfunction setup(backend) {\n    wasmResizeBilinear = backend.wasm.cwrap('ResizeBilinear', null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number' // outId\n    ]);\n}\nfunction resizeBilinear(args) {\n    const { backend, inputs, attrs } = args;\n    const { x } = inputs;\n    const { alignCorners, newHeight, newWidth } = attrs;\n    const [batch, oldHeight, oldWidth, numChannels] = x.shape;\n    const outShape = [batch, newHeight, newWidth, numChannels];\n    let xData = backend.dataIdMap.get(x.dataId);\n    let castedData;\n    if (xData.dtype !== 'float32') {\n        castedData = cast({ backend, inputs: { x }, attrs: { dtype: 'float32' } });\n        xData = backend.dataIdMap.get(castedData.dataId);\n    }\n    const xId = xData.id;\n    const out = backend.makeOutput(outShape, 'float32');\n    if (util.sizeFromShape(x.shape) === 0) {\n        return out;\n    }\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmResizeBilinear(xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth, alignCorners ? 1 : 0, outId);\n    if (castedData != null) {\n        backend.disposeData(castedData.dataId);\n    }\n    return out;\n}\nregisterKernel({\n    kernelName: 'ResizeBilinear',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: resizeBilinear\n});\n//# sourceMappingURL=ResizeBilinear.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Rsqrt');\n//# sourceMappingURL=Rsqrt.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var scatter_util = __TEMP__['scatter_util'];var util = __TEMP__['util'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nlet wasmScatterNd;\nfunction setup(backend) {\n    wasmScatterNd = backend.wasm.cwrap('ScatterNd', null /*void*/, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n        'number' // outId\n    ]);\n}\nfunction scatterNd(args) {\n    const { backend, inputs, attrs } = args;\n    const { indices, updates } = inputs;\n    const { shape } = attrs;\n    const out = backend.makeOutput(shape, updates.dtype);\n    if (util.sizeFromShape(shape) === 0) {\n        return out;\n    }\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = scatter_util.calculateShapes(updates, indices, shape);\n    const indicesData = backend.dataIdMap.get(indices.dataId);\n    const indicesId = indicesData.id;\n    const updatesData = backend.dataIdMap.get(updates.dataId);\n    const updatesId = updatesData.id;\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmScatterNd(indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates, sliceSize, stridesBytes, outputSize, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'ScatterNd',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: scatterNd\n});\n//# sourceMappingURL=ScatterNd.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc =\n        backend.wasm.cwrap('Sigmoid', null /* void */, ['number', 'number']);\n}\nfunction sigmoid(args) {\n    const { backend, inputs: { x } } = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n        return out;\n    }\n    wasmFunc(xId, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'Sigmoid',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: sigmoid\n});\n//# sourceMappingURL=Sigmoid.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Sin');\n//# sourceMappingURL=Sin.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var buffer = __TEMP__['buffer'];var registerKernel = __TEMP__['registerKernel'];var slice_util = __TEMP__['slice_util'];var util = __TEMP__['util'];\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.slice = function slice(args) {\n    const { inputs: { x }, attrs: { begin, size }, backend } = args;\n    const isContinous = slice_util.isSliceContinous(x.shape, begin, size);\n    const xVals = backend.typedArrayFromHeap(x);\n    const out = backend.makeOutput(size, x.dtype);\n    const outVals = backend.typedArrayFromHeap(out);\n    const xStrides = util.computeStrides(x.shape);\n    if (isContinous) {\n        const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n        outVals.set(xVals.subarray(flatOffset, flatOffset + util.sizeFromShape(size)));\n        return out;\n    }\n    const rank = x.shape.length;\n    if (rank === 2) {\n        slice2d(xVals, xStrides[0], outVals, begin, size);\n    }\n    else if (rank === 3) {\n        slice3d(xVals, xStrides[0], xStrides[1], outVals, begin, size);\n    }\n    else if (rank === 4) {\n        slice4d(xVals, xStrides[0], xStrides[1], xStrides[2], outVals, begin, size);\n    }\n    else {\n        genericSliceSlow(xVals, x, outVals, begin, size);\n    }\n    return out;\n};\nfunction slice2d(xVals, xStride, outVals, begin, size) {\n    let outOffset = 0;\n    const beginI = begin[0];\n    const beginJ = begin[1];\n    const endI = beginI + size[0];\n    for (let i = beginI; i < endI; i++) {\n        const xOffset = i * xStride + beginJ;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n        outOffset += size[1];\n    }\n}\nfunction slice3d(xVals, xStride1, xStride2, outVals, begin, size) {\n    let outOffset = 0;\n    const beginI = begin[0];\n    const beginJ = begin[1];\n    const beginK = begin[2];\n    const endI = beginI + size[0];\n    const endJ = beginJ + size[1];\n    for (let i = beginI; i < endI; i++) {\n        for (let j = beginJ; j < endJ; j++) {\n            const xOffset = i * xStride1 + j * xStride2 + beginK;\n            outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n            outOffset += size[2];\n        }\n    }\n}\nfunction slice4d(xVals, xStride1, xStride2, xStride3, outVals, begin, size) {\n    let outOffset = 0;\n    const beginI = begin[0];\n    const beginJ = begin[1];\n    const beginK = begin[2];\n    const endI = beginI + size[0];\n    const endJ = beginJ + size[1];\n    const endK = beginK + size[2];\n    const beginL = begin[3];\n    for (let i = beginI; i < endI; i++) {\n        for (let j = beginJ; j < endJ; j++) {\n            for (let k = beginK; k < endK; k++) {\n                const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n                outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n                outOffset += size[3];\n            }\n        }\n    }\n}\nfunction genericSliceSlow(xVals, xInfo, outVals, begin, size) {\n    const outBuf = buffer(size, xInfo.dtype, outVals);\n    const xBuf = buffer(xInfo.shape, xInfo.dtype, xVals);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const loc = outBuf.indexToLoc(i);\n        const xLoc = loc.map((idx, j) => idx + begin[j]);\n        outVals[i] = xBuf.get(...xLoc);\n    }\n}\nregisterKernel({\n    kernelName: 'Slice',\n    backendName: 'wasm',\n    kernelFunc: slice,\n});\n//# sourceMappingURL=Slice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nlet wasmFunc;\nfunction setup(backend) {\n    wasmFunc = backend.wasm.cwrap('Softmax', null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number' // batch\n    ]);\n}\nfunction softmax(args) {\n    const { backend, inputs: { logits }, attrs: { dim } } = args;\n    const xId = backend.dataIdMap.get(logits.dataId).id;\n    const out = backend.makeOutput(logits.shape, logits.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const channels = logits.shape[dim];\n    const batch = util.sizeFromShape(logits.shape) / channels;\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n        return out;\n    }\n    wasmFunc(xId, outId, channels, batch);\n    return out;\n}\nregisterKernel({\n    kernelName: 'Softmax',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: softmax\n});\n//# sourceMappingURL=Softmax.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];var SplitV = __TEMP__['SplitV'];var util = __TEMP__['util'];\nvar __TEMP__ = require('./Slice');var slice = __TEMP__['slice'];\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.split = function split(args) {\n    const { inputs, attrs, backend } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = util.parseAxisParam(axis, x.shape)[0];\n    let splitSizes;\n    if (typeof (numOrSizeSplits) === 'number') {\n        splitSizes =\n            new Array(numOrSizeSplits).fill(x.shape[$axis] / numOrSizeSplits);\n    }\n    else {\n        splitSizes = numOrSizeSplits;\n    }\n    const begin = new Array(x.shape.length).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const xSliceSize = [...size];\n        xSliceSize[$axis] = s;\n        const xSlice = slice({ inputs: { x }, attrs: { begin, size: xSliceSize }, backend });\n        begin[$axis] += s;\n        return xSlice;\n    });\n};\nregisterKernel({ kernelName: SplitV, backendName: 'wasm', kernelFunc: split });\n//# sourceMappingURL=Split.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Sqrt');\n//# sourceMappingURL=Sqrt.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Square');\n//# sourceMappingURL=Square.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./binary_kernel');var registerBinaryKernel = __TEMP__['registerBinaryKernel'];\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Sub', supportsFullBroadcast);\n//# sourceMappingURL=Sub.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var backend_util = __TEMP__['backend_util'];var registerKernel = __TEMP__['registerKernel'];var util = __TEMP__['util'];\nlet wasmSum;\nfunction setup(backend) {\n    wasmSum =\n        backend.wasm.cwrap('Sum', null /*void*/, ['number, number, number']);\n}\nfunction sum(args) {\n    const { backend, inputs, attrs } = args;\n    const { axes } = attrs;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    backend_util.assertAxesAreInnerMostDims('sum', axes, x.shape.length);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(x.shape, axes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const out = backend.makeOutput(outShape, x.dtype);\n    if (util.sizeFromShape(x.shape) === 0) {\n        return out;\n    }\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(xId, reduceSize, outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'Sum',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: sum\n});\n//# sourceMappingURL=Sum.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('./unary_kernel');var registerUnaryKernel = __TEMP__['registerUnaryKernel'];\nregisterUnaryKernel('Tanh');\n//# sourceMappingURL=Tanh.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nlet wasmTile;\nfunction setup(backend) {\n    wasmTile = backend.wasm.cwrap('Tile', null /* void */, [\n        'number',\n        'array',\n        'number',\n        'array',\n        'number',\n        'number' // out_id\n    ]);\n}\nfunction tile(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const { reps } = attrs;\n    const newShape = new Array(x.shape.length);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[i] * reps[i];\n    }\n    const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n    const out = backend.makeOutput(newShape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmTile(xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length, CppDType[out.dtype], outId);\n    return out;\n}\nregisterKernel({\n    kernelName: 'Tile',\n    backendName: 'wasm',\n    setupFunc: setup,\n    kernelFunc: tile\n});\n//# sourceMappingURL=Tile.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./types');var CppDType = __TEMP__['CppDType'];\nlet wasmTranspose;\nfunction setup(backend) {\n    wasmTranspose = backend.wasm.cwrap('Transpose', null /* void */, [\n        'number',\n        'array',\n        'number',\n        'number',\n        'number',\n        'array',\n        'number',\n    ]);\n}\nfunction transpose(args) {\n    const { inputs, backend, attrs } = args;\n    // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n    // better due to simpler memory access pattern.\n    const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n    const x = {\n        dataId: inputs.x.dataId,\n        shape: reducedShape,\n        dtype: inputs.x.dtype\n    };\n    let permIsNoOp = true;\n    for (let i = 0; i < perm.length; i++) {\n        if (perm[i] !== i) {\n            permIsNoOp = false;\n        }\n    }\n    const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n    if (permIsNoOp) {\n        return { dataId: x.dataId, shape: outShape, dtype: x.dtype };\n    }\n    const out = backend.makeOutput(outShape, x.dtype);\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n    const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n    wasmTranspose(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes, perm.length);\n    return out;\n}\nfunction computeOutShape(inShape, perm) {\n    const outShape = new Array(inShape.length);\n    for (let i = 0; i < outShape.length; i++) {\n        outShape[i] = inShape[perm[i]];\n    }\n    return outShape;\n}\nfunction removeOneSizeDims(shape, perm) {\n    const newShape = [];\n    const newPerm = [];\n    for (let i = 0; i < shape.length; ++i) {\n        if (shape[i] !== 1) {\n            newShape.push(shape[i]);\n        }\n        if (shape[perm[i]] !== 1) {\n            newPerm.push(perm[i]);\n        }\n    }\n    for (let i = 0; i < newPerm.length; ++i) {\n        let minValIdx = -1;\n        for (let j = 0; j < newPerm.length; ++j) {\n            if (newPerm[j] >= i &&\n                (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n                minValIdx = j;\n            }\n        }\n        newPerm[minValIdx] = i;\n    }\n    return [newShape, newPerm];\n}\nregisterKernel({\n    kernelName: 'Transpose',\n    backendName: 'wasm',\n    kernelFunc: transpose,\n    setupFunc: setup,\n});\n//# sourceMappingURL=Transpose.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nvar __TEMP__ = require('./Slice');var slice = __TEMP__['slice'];\nfunction unpack(args) {\n    const { inputs: { x }, backend, attrs: { axis } } = args;\n    const numOutputs = x.shape[axis];\n    const rank = x.shape.length;\n    const outShape = new Array(rank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < rank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = x.shape[i];\n        }\n    }\n    const outs = new Array(numOutputs);\n    const begin = new Array(rank).fill(0);\n    const size = x.shape.slice();\n    size[axis] = 1;\n    for (let i = 0; i < outs.length; i++) {\n        begin[axis] = i;\n        outs[i] = slice({ inputs: { x }, attrs: { begin, size }, backend });\n    }\n    return outs.map(({ dataId, dtype }) => ({ dataId, dtype, shape: outShape }));\n}\nregisterKernel({\n    kernelName: 'Unpack',\n    backendName: 'wasm',\n    kernelFunc: unpack,\n});\n//# sourceMappingURL=Unpack.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var registerKernel = __TEMP__['registerKernel'];\nfunction zerosLike(args) {\n    const { inputs: { x }, backend } = args;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outVals = backend.typedArrayFromHeap(out);\n    outVals.fill(0);\n    return out;\n}\nregisterKernel({\n    kernelName: 'ZerosLike',\n    backendName: 'wasm',\n    kernelFunc: zerosLike,\n});\n//# sourceMappingURL=ZerosLike.js.map","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __TEMP__ = require('@tensorflow/tfjs-core');var DataStorage = __TEMP__['DataStorage'];var engine = __TEMP__['engine'];var KernelBackend = __TEMP__['KernelBackend'];var registerBackend = __TEMP__['registerBackend'];var util = __TEMP__['util'];\nvar __TEMP__ = require('../wasm-out/tfjs-backend-wasm.js');var wasmFactory = __REQUIRE_DEFAULT__(__TEMP__);\nconst WASM_PRIORITY = 2;\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.BackendWasm = class BackendWasm extends KernelBackend {\n    constructor(wasm) {\n        super();\n        this.wasm = wasm;\n        // 0 is reserved for null data ids.\n        this.dataIdNextNumber = 1;\n        this.wasm.tfjs.init();\n        this.dataIdMap = new DataStorage(this, engine());\n    }\n    write(values, shape, dtype) {\n        const dataId = {};\n        this.move(dataId, values, shape, dtype);\n        return dataId;\n    }\n    numDataIds() {\n        return this.dataIdMap.numDataIds();\n    }\n    async time(f) {\n        const start = util.now();\n        f();\n        const kernelMs = util.now() - start;\n        return { kernelMs };\n    }\n    move(dataId, values, shape, dtype) {\n        const id = this.dataIdNextNumber++;\n        if (dtype === 'string') {\n            const stringBytes = values;\n            this.dataIdMap.set(dataId, { id, stringBytes, shape, dtype, memoryOffset: null });\n            return;\n        }\n        const size = util.sizeFromShape(shape);\n        const numBytes = size * util.bytesPerElement(dtype);\n        const memoryOffset = this.wasm._malloc(numBytes);\n        this.dataIdMap.set(dataId, { id, memoryOffset, shape, dtype });\n        this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n        if (values != null) {\n            this.wasm.HEAPU8.set(new Uint8Array(values.buffer, 0, numBytes), memoryOffset);\n        }\n    }\n    async read(dataId) {\n        return this.readSync(dataId);\n    }\n    readSync(dataId) {\n        const { memoryOffset, dtype, shape, stringBytes } = this.dataIdMap.get(dataId);\n        if (dtype === 'string') {\n            return stringBytes;\n        }\n        const bytes = this.wasm.HEAPU8.slice(memoryOffset, memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n        return typedArrayFromBuffer(bytes.buffer, dtype);\n    }\n    disposeData(dataId) {\n        const data = this.dataIdMap.get(dataId);\n        this.wasm._free(data.memoryOffset);\n        this.wasm.tfjs.disposeData(data.id);\n        this.dataIdMap.delete(dataId);\n    }\n    floatPrecision() {\n        return 32;\n    }\n    // Returns the memory offset of a tensor. Useful for debugging and unit\n    // testing.\n    getMemoryOffset(dataId) {\n        return this.dataIdMap.get(dataId).memoryOffset;\n    }\n    dispose() {\n        this.wasm.tfjs.dispose();\n        this.wasm = null;\n    }\n    memory() {\n        return { unreliable: false };\n    }\n    /**\n     * Make a tensor info for the output of an op. If `memoryOffset` is not\n     * present, this method allocates memory on the WASM heap. If `memoryOffset`\n     * is present, the memory was allocated elsewhere (in c++) and we just record\n     * the pointer where that memory lives.\n     */\n    makeOutput(shape, dtype, memoryOffset) {\n        let dataId;\n        if (memoryOffset == null) {\n            dataId = this.write(null /* values */, shape, dtype);\n        }\n        else {\n            dataId = {};\n            const id = this.dataIdNextNumber++;\n            this.dataIdMap.set(dataId, { id, memoryOffset, shape, dtype });\n            const size = util.sizeFromShape(shape);\n            this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n        }\n        return { dataId, shape, dtype };\n    }\n    typedArrayFromHeap({ shape, dtype, dataId }) {\n        const buffer = this.wasm.HEAPU8.buffer;\n        const { memoryOffset } = this.dataIdMap.get(dataId);\n        const size = util.sizeFromShape(shape);\n        switch (dtype) {\n            case 'float32':\n                return new Float32Array(buffer, memoryOffset, size);\n            case 'int32':\n                return new Int32Array(buffer, memoryOffset, size);\n            case 'bool':\n                return new Uint8Array(buffer, memoryOffset, size);\n            default:\n                throw new Error(`Uknown dtype ${dtype}`);\n        }\n    }\n};\nregisterBackend('wasm', async () => {\n    const { wasm } = await init();\n    return new BackendWasm(wasm);\n}, WASM_PRIORITY);\nfunction createInstantiateWasmFunc(path) {\n    // tslint:disable-next-line:no-any\n    return (imports, callback) => {\n        util.fetch(path, { credentials: 'same-origin' }).then((response) => {\n            if (!response['ok']) {\n                imports.env.a(`failed to load wasm binary file at '${path}'`);\n            }\n            response.arrayBuffer().then(binary => {\n                WebAssembly.instantiate(binary, imports).then(output => {\n                    callback(output.instance);\n                });\n            });\n        });\n        return {};\n    };\n}\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.init = async function init() {\n    return new Promise((resolve, reject) => {\n        const factoryConfig = {};\n        if (wasmPath != null) {\n            factoryConfig.locateFile = (path, prefix) => {\n                if (path.endsWith('.wasm')) {\n                    return wasmPath;\n                }\n                return prefix + path;\n            };\n            // use wasm instantiateWasm override when system fetch is not available.\n            // For detail references\n            // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n            if (customFetch) {\n                factoryConfig.instantiateWasm = createInstantiateWasmFunc(wasmPath);\n            }\n        }\n        const wasm = wasmFactory(factoryConfig);\n        const voidReturnType = null;\n        // Using the tfjs namespace to avoid conflict with emscripten's API.\n        wasm.tfjs = {\n            init: wasm.cwrap('init', null, []),\n            registerTensor: wasm.cwrap('register_tensor', null, [\n                'number',\n                'number',\n                'number',\n            ]),\n            disposeData: wasm.cwrap('dispose_data', voidReturnType, ['number']),\n            dispose: wasm.cwrap('dispose', voidReturnType, []),\n        };\n        let initialized = false;\n        wasm.onRuntimeInitialized = () => {\n            initialized = true;\n            initAborted = false;\n            resolve({ wasm });\n        };\n        wasm.onAbort = () => {\n            if (initialized) {\n                // Emscripten already called console.warn so no need to double log.\n                return;\n            }\n            if (initAborted) {\n                // Emscripten calls `onAbort` twice, resulting in double error\n                // messages.\n                return;\n            }\n            initAborted = true;\n            const rejectMsg = 'Make sure the server can serve the `.wasm` file relative to the ' +\n                'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n            reject({ message: rejectMsg });\n        };\n    });\n};\nfunction typedArrayFromBuffer(buffer, dtype) {\n    switch (dtype) {\n        case 'float32':\n            return new Float32Array(buffer);\n        case 'int32':\n            return new Int32Array(buffer);\n        case 'bool':\n            return new Uint8Array(buffer);\n        default:\n            throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\nlet wasmPath = null;\nlet initAborted = false;\nlet customFetch = false;\n/**\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n */\n/** @doc {heading: 'Environment', namespace: 'wasm'} */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.setWasmPath = function setWasmPath(path, usePlatformFetch = false) {\n    if (initAborted) {\n        throw new Error('The WASM backend was already initialized. Make sure you call ' +\n            '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n    }\n    wasmPath = path;\n    customFetch = usePlatformFetch;\n};\n/** Used in unit tests. */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.resetWasmPath = function resetWasmPath() {\n    wasmPath = null;\n    customFetch = false;\n    initAborted = false;\n};\n//# sourceMappingURL=backend_wasm.js.map","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_HAS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_HAS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_NODE=ENVIRONMENT_HAS_NODE&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;read_=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable=new WebAssembly.Table({\"initial\":112,\"maximum\":112+0,\"element\":\"anyfunc\"});var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var DYNAMIC_BASE=5253200,DYNAMICTOP_PTR=10160;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_ceil=Math.ceil;var Math_floor=Math.floor;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";throw new WebAssembly.RuntimeError(what)}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_unstable\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}__ATINIT__.push({func:function(){___wasm_call_ctors()}});function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function _emscripten_get_heap_size(){return HEAP8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=emscripten_realloc_buffer(newSize);if(!replacement){return false}return true}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};var SYSCALLS={buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function _fd_close(fd){try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _roundf(d){d=+d;return d>=+0?+Math_floor(d+ +.5):+Math_ceil(d-+.5)}var asmLibraryArg={\"a\":_abort,\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"g\":_fd_close,\"c\":_fd_seek,\"f\":_fd_write,\"memory\":wasmMemory,\"b\":_roundf,\"table\":wasmTable};var asm=createWasm();Module[\"asm\"]=asm;var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return Module[\"asm\"][\"h\"].apply(null,arguments)};var _init=Module[\"_init\"]=function(){return Module[\"asm\"][\"i\"].apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return Module[\"asm\"][\"j\"].apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return Module[\"asm\"][\"k\"].apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return Module[\"asm\"][\"l\"].apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return Module[\"asm\"][\"m\"].apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return Module[\"asm\"][\"n\"].apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return Module[\"asm\"][\"o\"].apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return Module[\"asm\"][\"p\"].apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return Module[\"asm\"][\"q\"].apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return Module[\"asm\"][\"r\"].apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return Module[\"asm\"][\"s\"].apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return Module[\"asm\"][\"t\"].apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return Module[\"asm\"][\"u\"].apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return Module[\"asm\"][\"v\"].apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return Module[\"asm\"][\"w\"].apply(null,arguments)};var _Div=Module[\"_Div\"]=function(){return Module[\"asm\"][\"x\"].apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return Module[\"asm\"][\"y\"].apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return Module[\"asm\"][\"z\"].apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return Module[\"asm\"][\"A\"].apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return Module[\"asm\"][\"B\"].apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return Module[\"asm\"][\"C\"].apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return Module[\"asm\"][\"D\"].apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return Module[\"asm\"][\"E\"].apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return Module[\"asm\"][\"F\"].apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return Module[\"asm\"][\"G\"].apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return Module[\"asm\"][\"H\"].apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return Module[\"asm\"][\"I\"].apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return Module[\"asm\"][\"J\"].apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return Module[\"asm\"][\"K\"].apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return Module[\"asm\"][\"L\"].apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return Module[\"asm\"][\"M\"].apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return Module[\"asm\"][\"N\"].apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return Module[\"asm\"][\"O\"].apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return Module[\"asm\"][\"P\"].apply(null,arguments)};var _Mul=Module[\"_Mul\"]=function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return Module[\"asm\"][\"R\"].apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return Module[\"asm\"][\"S\"].apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return Module[\"asm\"][\"T\"].apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return Module[\"asm\"][\"U\"].apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return Module[\"asm\"][\"V\"].apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return Module[\"asm\"][\"W\"].apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return Module[\"asm\"][\"X\"].apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return Module[\"asm\"][\"_\"].apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return Module[\"asm\"][\"$\"].apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return Module[\"asm\"][\"aa\"].apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return Module[\"asm\"][\"da\"].apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return Module[\"asm\"][\"ea\"].apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return Module[\"asm\"][\"fa\"].apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return Module[\"asm\"][\"ga\"].apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return Module[\"asm\"][\"ha\"].apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return Module[\"asm\"][\"ia\"].apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return Module[\"asm\"][\"ja\"].apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return Module[\"asm\"][\"ka\"].apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return Module[\"asm\"][\"la\"].apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return Module[\"asm\"][\"ma\"].apply(null,arguments)};var _free=Module[\"_free\"]=function(){return Module[\"asm\"][\"na\"].apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return Module[\"asm\"][\"oa\"].apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return Module[\"asm\"][\"pa\"].apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return Module[\"asm\"][\"qa\"].apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return Module[\"asm\"][\"ra\"].apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return Module[\"asm\"][\"sa\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n  return WasmBackendModule\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = WasmBackendModule;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return WasmBackendModule; });\n    else if (typeof exports === 'object')\n      exports[\"WasmBackendModule\"] = WasmBackendModule;\n    ","/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '2.0.0';\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });Object.defineProperty(exports, 'version', { enumerable: true, configurable: true, get: function() { return version; } });\n//# sourceMappingURL=version.js.map"]}